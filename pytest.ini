[tool:pytest]
# Pytest configuration for Synthetic Data Guardian

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests/python

# Minimum version requirement
minversion = 7.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:coverage/python
    --cov-report=xml:coverage/python/coverage.xml
    --cov-fail-under=80
    --junitxml=test-results/python-results.xml
    --maxfail=10
    --durations=10
    -ra
    --color=yes

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    fast: Fast running tests
    security: Security-related tests
    privacy: Privacy-related tests
    performance: Performance tests
    compliance: Compliance tests
    synthetic: Synthetic data generation tests
    validation: Data validation tests
    lineage: Lineage tracking tests
    watermark: Watermarking tests
    mock: Tests using mocked dependencies
    real: Tests requiring real external services
    requires_gpu: Tests that require GPU
    requires_network: Tests that require network access
    requires_docker: Tests that require Docker

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pandas.*
    ignore::UserWarning:numpy.*
    ignore::FutureWarning:sklearn.*
    error::UserWarning:synthetic_guardian.*

# Asyncio configuration
asyncio_mode = auto

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration (in seconds)
timeout = 300
timeout_method = thread

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto
# --dist worksteal

# Coverage configuration
[coverage:run]
source = src/
omit = 
    src/**/__init__.py
    src/**/test_*.py
    src/**/*_test.py
    src/**/conftest.py
    src/**/settings.py
    src/**/migrations/**
    */venv/**
    */virtualenv/**
    */site-packages/**
    */tests/**

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false
skip_empty = false
sort = Cover

[coverage:html]
directory = coverage/python/htmlcov

[coverage:xml]
output = coverage/python/coverage.xml